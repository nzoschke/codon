/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/contacts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List contacts */
    get: operations["list-contacts"];
    put?: never;
    /** Create contacts */
    post: operations["create-contacts"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/contacts/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get contacts by ID */
    get: operations["get-contacts-by-id"];
    /** Update contacts by ID */
    put: operations["update-contacts-by-id"];
    post?: never;
    /** Delete contacts by ID */
    delete: operations["delete-contacts-by-id"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get health
     * @description Returns 200 if healthy, indeterminate response if not.
     */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            "Content-Type"?: string;
            [name: string]: unknown;
          };
          content: {
            /** @example ok */
            "text/plain": unknown;
          };
        };
        /** @description Error */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/problem+json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create users */
    post: operations["create-users"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/session": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get users session */
    get: operations["get-users-session"];
    put?: never;
    /** Create users session */
    post: operations["create-users-session"];
    /** Delete users session */
    delete: operations["delete-users-session"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Contact: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/Contact.json
       */
      readonly $schema?: string;
      /** Format: date-time */
      created_at: string;
      email: string;
      /** Format: int64 */
      id: number;
      info: components["schemas"]["ContactInfo"];
      name: string;
      phone: string;
      /** Format: date-time */
      updated_at: string;
    };
    ContactCreateIn: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/ContactCreateIn.json
       */
      readonly $schema?: string;
      email: string;
      info: components["schemas"]["ContactInfo"];
      name: string;
      phone: string;
    };
    ContactInfo: {
      /** Format: int64 */
      age: number;
    };
    ContactListOut: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/ContactListOut.json
       */
      readonly $schema?: string;
      contacts: components["schemas"]["Contact"][] | null;
    };
    ContactUpdateIn: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/ContactUpdateIn.json
       */
      readonly $schema?: string;
      email: string;
      info: components["schemas"]["ContactInfo"];
      name: string;
      phone: string;
    };
    ErrorDetail: {
      /** @description Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id' */
      location?: string;
      /** @description Error message text */
      message?: string;
      /** @description The value at the given location */
      value?: unknown;
    };
    ErrorModel: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/ErrorModel.json
       */
      readonly $schema?: string;
      /**
       * @description A human-readable explanation specific to this occurrence of the problem.
       * @example Property foo is required but is missing.
       */
      detail?: string;
      /** @description Optional list of individual error details */
      errors?: components["schemas"]["ErrorDetail"][] | null;
      /**
       * Format: uri
       * @description A URI reference that identifies the specific occurrence of the problem.
       * @example https://example.com/error-log/abc123
       */
      instance?: string;
      /**
       * Format: int64
       * @description HTTP status code
       * @example 400
       */
      status?: number;
      /**
       * @description A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
       * @example Bad Request
       */
      title?: string;
      /**
       * Format: uri
       * @description A URI reference to human-readable documentation for the error.
       * @default about:blank
       * @example https://example.com/errors/example
       */
      type: string;
    };
    UserCreateIn: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/UserCreateIn.json
       */
      readonly $schema?: string;
      /** Format: email */
      email: string;
      password: string;
    };
    UserCreateOut: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/UserCreateOut.json
       */
      readonly $schema?: string;
      email: string;
      /** Format: int64 */
      id: number;
      password_hash: string;
    };
    UserGetOut: {
      /**
       * Format: uri
       * @description A URL to the JSON Schema for this object.
       * @example https://example.com/schemas/UserGetOut.json
       */
      readonly $schema?: string;
      email: string;
      /** Format: int64 */
      id: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  "list-contacts": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ContactListOut"];
        };
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "create-contacts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ContactCreateIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Contact"];
        };
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "get-contacts-by-id": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Contact"];
        };
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "update-contacts-by-id": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ContactUpdateIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Contact"];
        };
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "delete-contacts-by-id": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "create-users": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserCreateIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserCreateOut"];
        };
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "get-users-session": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: {
        session?: string;
      };
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          Session?: string;
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserGetOut"];
        };
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "create-users-session": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserCreateIn"];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        headers: {
          "Set-Cookie"?: string;
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
  "delete-users-session": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: {
        session?: string;
      };
    };
    requestBody?: never;
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Error */
      default: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/problem+json": components["schemas"]["ErrorModel"];
        };
      };
    };
  };
}
