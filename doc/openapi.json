{
  "components": {
    "schemas": {
      "Contact": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "example": "https://example.com/schemas/Contact.json",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "created_at": { "format": "date-time", "type": "string" },
          "email": { "type": "string" },
          "id": { "format": "int64", "type": "integer" },
          "info": { "$ref": "#/components/schemas/ContactInfo" },
          "name": { "type": "string" },
          "phone": { "type": "string" },
          "updated_at": { "format": "date-time", "type": "string" }
        },
        "required": [
          "created_at",
          "email",
          "id",
          "info",
          "name",
          "phone",
          "updated_at"
        ],
        "type": "object"
      },
      "ContactCreateIn": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "example": "https://example.com/schemas/ContactCreateIn.json",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "email": { "type": "string" },
          "info": { "$ref": "#/components/schemas/ContactInfo" },
          "name": { "type": "string" },
          "phone": { "type": "string" }
        },
        "required": ["email", "info", "name", "phone"],
        "type": "object"
      },
      "ContactInfo": {
        "additionalProperties": false,
        "properties": { "age": { "format": "int64", "type": "integer" } },
        "required": ["age"],
        "type": "object"
      },
      "ContactListOut": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "example": "https://example.com/schemas/ContactListOut.json",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "contacts": {
            "items": { "$ref": "#/components/schemas/Contact" },
            "nullable": true,
            "type": "array"
          }
        },
        "required": ["contacts"],
        "type": "object"
      },
      "ContactUpdateIn": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "example": "https://example.com/schemas/ContactUpdateIn.json",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "email": { "type": "string" },
          "info": { "$ref": "#/components/schemas/ContactInfo" },
          "name": { "type": "string" },
          "phone": { "type": "string" }
        },
        "required": ["email", "info", "name", "phone"],
        "type": "object"
      },
      "ErrorDetail": {
        "additionalProperties": false,
        "properties": {
          "location": {
            "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            "type": "string"
          },
          "message": { "description": "Error message text", "type": "string" },
          "value": { "description": "The value at the given location" }
        },
        "type": "object"
      },
      "ErrorModel": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "example": "https://example.com/schemas/ErrorModel.json",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "Property foo is required but is missing.",
            "type": "string"
          },
          "errors": {
            "description": "Optional list of individual error details",
            "items": { "$ref": "#/components/schemas/ErrorDetail" },
            "nullable": true,
            "type": "array"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "example": "https://example.com/error-log/abc123",
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "example": 400,
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
            "example": "Bad Request",
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "A URI reference to human-readable documentation for the error.",
            "example": "https://example.com/errors/example",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserCreateIn": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "example": "https://example.com/schemas/UserCreateIn.json",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "email": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["email", "password"],
        "type": "object"
      },
      "UserCreateOut": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "example": "https://example.com/schemas/UserCreateOut.json",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "email": { "type": "string" },
          "id": { "format": "int64", "type": "integer" }
        },
        "required": ["id", "email"],
        "type": "object"
      }
    }
  },
  "info": { "title": "Codon", "version": "1.0.0" },
  "openapi": "3.0.3",
  "paths": {
    "/api/contacts": {
      "get": {
        "operationId": "list-contacts",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "limit",
            "schema": { "format": "int64", "type": "integer" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "offset",
            "schema": { "format": "int64", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContactListOut" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List contacts",
        "tags": ["Contacts"]
      },
      "post": {
        "operationId": "create-contacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContactCreateIn" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Contact" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Create contacts",
        "tags": ["Contacts"]
      }
    },
    "/api/contacts/{id}": {
      "delete": {
        "operationId": "delete-contacts-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "int64", "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete contacts by ID",
        "tags": ["Contacts"]
      },
      "get": {
        "operationId": "get-contacts-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "int64", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Contact" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get contacts by ID",
        "tags": ["Contacts"]
      },
      "put": {
        "operationId": "update-contacts-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "int64", "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContactUpdateIn" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Contact" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Update contacts by ID",
        "tags": ["Contacts"]
      }
    },
    "/api/health": {
      "get": {
        "description": "Returns 200 if healthy, indeterminate response if not.",
        "responses": {
          "200": {
            "content": { "text/plain": { "example": "ok" } },
            "description": "OK",
            "headers": { "Content-Type": { "schema": { "type": "string" } } }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get health"
      }
    },
    "/api/users": {
      "post": {
        "operationId": "create-users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreateIn" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserCreateOut" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Create users",
        "tags": ["Users"]
      }
    },
    "/api/users/session": {
      "get": {
        "operationId": "get-users-session",
        "parameters": [
          { "in": "cookie", "name": "session", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserCreateOut" }
              }
            },
            "description": "OK",
            "headers": { "Session": { "schema": { "type": "string" } } }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get users session",
        "tags": ["Users"]
      },
      "post": {
        "operationId": "create-users-session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreateIn" }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": { "Set-Cookie": { "schema": { "type": "string" } } }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Create users session",
        "tags": ["Users"]
      }
    }
  }
}
