// Code generated by "sqlc-gen-zombiezen". DO NOT EDIT.

package q

import (
	"fmt"
	"zombiezen.com/go/sqlite"
)

type ContactDeleteStmt struct {
	stmt *sqlite.Stmt
}

func ContactDelete(tx *sqlite.Conn) *ContactDeleteStmt {
	// Prepare the statement into connection cache
	stmt := tx.Prep(`
DELETE FROM
  contacts
WHERE
  id = ?
    `)
	ps := &ContactDeleteStmt{stmt: stmt}
	return ps
}

func (ps *ContactDeleteStmt) Run(
	id int64,
) (
	err error,
) {
	defer ps.stmt.Reset()

	// Bind parameters
	ps.stmt.BindInt64(1, id)

	// Execute the query
	if _, err := ps.stmt.Step(); err != nil {
		return fmt.Errorf("failed to execute contactdelete SQL: %w", err)
	}

	return nil
}

func OnceContactDelete(
	tx *sqlite.Conn,
	id int64,
) (
	err error,
) {
	ps := ContactDelete(tx)

	return ps.Run(
		id,
	)
}
